# Programmer: Laura Castro
# Date: 8/14/2023
# Purpose: This program showcases the use of the following methods: update(), get(), popitem(), items(), dict(), tuple(), keys(), list(), values() count(), sorted(), copy(), clear()

# This is a tuple of names
names = "laura", "carmen", "castro"
scores = 56, 86, 94, 73

# This is a dictionary of names and scores
names_and_scores = {"laura" : 95, "jerry" : 86, "carol": 75}

# Acces a tuple element using an index integer
print(names[0])

# update()
names_and_scores.update({"gail": 84, "terri": 89})
print("update()", names_and_scores)

# get()
second_name = names_and_scores.get(names[0])
print("get()",second_name)

# popitem()
names_and_scores.popitem()
print("popitem()", names_and_scores)

# items()
for key, value in names_and_scores.items():
    print("key:",key, ">>", "value:", value)
    
# dict()
new_names_and_scores = ["paul", 64], ["nick", 81], ["steve", 92]
print("dict()",dict(new_names_and_scores))

# tuple()
new_scores = [64, 87, 79, 35]
print("tuple()",tuple(new_scores))

# keys()
print("keys()",names_and_scores.keys())

# list()
print("list()",list(new_scores))

# values()
print("values()",names_and_scores.values())

# count()
duplicate_tup = "name", "score", "name"
print("count()",duplicate_tup.count("name"))

# sorted()
print("sorted()",sorted(names_and_scores))
print(sorted(duplicate_tup))

# copy()
copy_names_and_scores = names_and_scores.copy()
print("copy()", copy_names_and_scores)

# clear()
print("clear()",copy_names_and_scores.clear())

tuple_1 = 1,2,3
tuple_2 = 1,2,3,4
tuple_3 = 1,2,3,5
tuple_4 = tuple_1 + tuple_2
tuple_5 = tuple_3 * 2
print(tuple_4)
print(tuple_5)

dictionary = {}
my_list = ['a', 'b', 'c', 'd']

for i in range(len(my_list)-1):
    dictionary[my_list[i]] = (my_list[i], )

for i in sorted(dictionary.keys()):
    k = dictionary[i]
    print(k)
    print(k[0])



    
   
   
   
   
   
   
   
   
   